// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum AdminRole {
  SUPER_ADMIN
  MANAGER
  EDITOR
}

enum Currency {
  INR
  USD
  EUR
  GBP
  CAD 
  AUD
  THB
  CNY
}

model Client {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  password   String
  isVerified Boolean    @default(false)
  status     UserStatus @default(ACTIVE)
  createdAt  DateTime   @default(now())
  otp        OTP[]
}

model Admin {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String
  role      AdminRole  @default(EDITOR)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
}

model OTP {
  id        Int      @id @default(autoincrement())
  otp       String
  expiresAt DateTime
  user      Client   @relation(fields: [clientId], references: [id])
  clientId  Int
  createdAt DateTime @default(now())
}

model Service {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  subServices SubService[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model SubService {
  id          Int               @id @default(autoincrement())
  name        String
  description String?
  prices      PriceByCountry[]
  service     Service           @relation(fields: [serviceId], references: [id])
  serviceId   Int
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  @@unique([name, serviceId])
  
}

model PriceByCountry {
  id           Int        @id @default(autoincrement())
  subService   SubService @relation(fields: [subServiceId], references: [id])
  subServiceId Int
  currency     Currency   @default(INR)
  price        Decimal    @db.Decimal(10, 2)

  @@unique([subServiceId, currency])
}